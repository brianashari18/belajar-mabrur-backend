<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cbdb226d-13c5-44f2-a4fd-e5a86a3cebf7" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064006.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064127.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064233.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064245.401.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064248.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064356.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064420.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064433.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064516.404.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T064546.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T070041.401.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T070055.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T082817.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2024-11-09T082955.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/controllers/content-controller.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/controllers/content-controller.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/middleware/api-key-middleware.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/middleware/api-key-middleware.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/middleware/auth-middleware.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/middleware/auth-middleware.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/middleware/error-middleware.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/middleware/error-middleware.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/route/api.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/route/api.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/services/content-service.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/services/content-service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/services/user-service.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/services/user-service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/content.http" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/content.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/content.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/content.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/test-util.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/test-util.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/validation/content-validation.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/validation/content-validation.js" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="OpenAPI" />
        <option value="HTTP Request" />
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2oAjN9NBdURYU65dfeUmyQQOq3F" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;HTTP Request.content | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.content | Create.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.content | Get All.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.content | Get.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Delete.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | GET request to example server.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Get (1).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Get.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Login (1).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Login.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.test | Update.executor&quot;: &quot;Run&quot;,
    &quot;Jest.DELETE /api/users/logout.executor&quot;: &quot;Run&quot;,
    &quot;Jest.DELETE /api/users/logout.should reject logout if token is invalid.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/contents.should cannot get all content.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/contents.should get all content.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/contents/:contentId.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/contents/:contentId.should get content by ID.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/contents/:contentId.should return 403 if API key is incorrect.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/contents/:contentId.should return 404 if content not found.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/users/current.executor&quot;: &quot;Run&quot;,
    &quot;Jest.GET /api/users/current.should can get current user.executor&quot;: &quot;Run&quot;,
    &quot;Jest.PATCH /api/contents/:contentId.should update content by ID.executor&quot;: &quot;Run&quot;,
    &quot;Jest.PATCH /api/users/current.executor&quot;: &quot;Run&quot;,
    &quot;Jest.PATCH /api/users/current.should can update user.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/contents.should can add new content.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/contents.should cannot add new content.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/users.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/users.should can register new user.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/users.should reject if request is invalid.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/users/login.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/users/login.should can login.executor&quot;: &quot;Run&quot;,
    &quot;Jest.POST /api/users/login.should reject login if password is wrong.executor&quot;: &quot;Run&quot;,
    &quot;Jest.content.test.js.executor&quot;: &quot;Run&quot;,
    &quot;Jest.user.test.js.executor&quot;: &quot;Run&quot;,
    &quot;Node.js.content-controller.js.executor&quot;: &quot;Run&quot;,
    &quot;Node.js.content-service.js.executor&quot;: &quot;Run&quot;,
    &quot;Node.js.main.js.executor&quot;: &quot;Run&quot;,
    &quot;Node.js.web.js.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Brian Anashari/Desktop/MyDream/project/belajar_mabrur_backend/src/route&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;C:/Users/Brian Anashari/Desktop/MyDream/project/belajar_mabrur_backend/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Program Files\\JetBrains\\WebStorm 2024.2.4\\plugins\\javascript-plugin\\jsLanguageServicesImpl\\external&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Brian Anashari\Desktop\MyDream\project\belajar_mabrur_backend\src\route" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Brian Anashari\Desktop\MyDream\project\belajar_mabrur_backend\src\test" />
      <recent name="C:\Users\Brian Anashari\Desktop\MyDream\project\belajar_mabrur_backend\src" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="GET /api/contents/:contentId.should get content by ID" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/test/content.test.js" />
      <test-names>
        <test-name value="GET /api/contents/:contentId" />
        <test-name value="should get content by ID" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="GET /api/contents/:contentId.should return 403 if API key is incorrect" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/test/content.test.js" />
      <test-names>
        <test-name value="GET /api/contents/:contentId" />
        <test-name value="should return 403 if API key is incorrect" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="GET /api/contents/:contentId.should return 404 if content not found" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/test/content.test.js" />
      <test-names>
        <test-name value="GET /api/contents/:contentId" />
        <test-name value="should return 404 if content not found" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="PATCH /api/contents/:contentId.should update content by ID" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/test/content.test.js" />
      <test-names>
        <test-name value="PATCH /api/contents/:contentId" />
        <test-name value="should update content by ID" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="content.test.js" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/src/test/content.test.js" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.PATCH /api/contents/:contentId.should update content by ID" />
        <item itemvalue="Jest.content.test.js" />
        <item itemvalue="Jest.GET /api/contents/:contentId.should return 403 if API key is incorrect" />
        <item itemvalue="Jest.GET /api/contents/:contentId.should return 404 if content not found" />
        <item itemvalue="Jest.GET /api/contents/:contentId.should get content by ID" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-WS-242.23726.96" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cbdb226d-13c5-44f2-a4fd-e5a86a3cebf7" name="Changes" comment="" />
      <created>1730319231970</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1730319231970</updated>
      <workItem from="1730319233084" duration="17525000" />
      <workItem from="1730341670765" duration="371000" />
      <workItem from="1731108448556" duration="7969000" />
      <workItem from="1731145368179" duration="1833000" />
      <workItem from="1731271905274" duration="6975000" />
      <workItem from="1731281005238" duration="3854000" />
      <workItem from="1731285683314" duration="3797000" />
      <workItem from="1731304701211" duration="12122000" />
      <workItem from="1731371466207" duration="3424000" />
      <workItem from="1731374925703" duration="396000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>